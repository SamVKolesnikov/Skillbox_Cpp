#include <iostream>
using namespace std;

string encrypt_caesar(string text, int offset) {

    if (abs (offset) > 25) offset %= 25;


    for (int i = 0; i < text.length(); i++) {

        if (text[i] >= 'a' && text[i] <= 'z') {
            if ((text[i] + offset) < 'a') {
                text[i] = ('z' + 1) - ('a' - (text[i] + offset));
            } else if ((text[i] + offset) > 'z') {
                text[i] = ('a' - 1) + ((text[i] + offset) - 'z');
            } else text[i] = text[i] + offset;
        }
        if (text[i] >= 'A' && text[i] <= 'Z') {
            if ((text[i] + offset) < 'A') {
                text[i] = ('Z' + 1) - ('A' - (text[i] + offset));
            } else if ((text[i] + offset) > 'Z') {
                text[i] = ('A' - 1) + ((text[i] + offset) - 'Z');
            } else text[i] = text[i] + offset;
        }
    }
    return text;
}

string decrypt_caesar(string txt, int ofs) {
    return encrypt_caesar(txt, -ofs);
}

int main() {

    string TextEntry;
    int StepEntry;

    cout << "\n⏬ Type your text to encrypt:" << endl;
    getline (cin, TextEntry);
    cout << "\n🔽 Insert the encryption ratio:" << endl;
    cin >> StepEntry;

    string EncryptedText = encrypt_caesar(TextEntry, StepEntry);

    cout << "\n🔠 The text is encrypted:\n" << EncryptedText << endl;

    cout << "\n✅ The decrypted text is the following:\n" << decrypt_caesar(EncryptedText, StepEntry) << endl;

}